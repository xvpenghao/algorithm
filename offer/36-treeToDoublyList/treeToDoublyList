#!/usr/bin/env python
# -*- coding: utf-8 -*-

class Node:
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    """def __init__(self):
        self.head = None
        self.pre = None"""

    def treeToDoublyList(self, root: Node) -> Node:
        def dfs(cur):
            if not cur: return
            dfs(cur.left)
            if self.pre:
                self.pre.right = cur
            else:
                self.head = cur
            # cur的指向
            cur.left = self.pre
            self.pre = cur
            dfs(cur.right)

        if not root:
            return None

        self.pre = None  # 给pre 赋值类类型None ，这样首次判断就不会报错了
        dfs(root)
        # 头尾节点 关联
        self.head.left, self.pre.right = self.pre, self.head

        return self.head


root = Node(4, left=Node(
    2,
    left=Node(1),
    right=Node(3)
), right=Node(
    5,
))

if __name__ == '__main__':
    res = Solution().treeToDoublyList(root)
    print(res)
